    def _compare_strings(
        self, str_local, str_git
    ):  # in case we search for strange effects
        str_local = "".join(c for c in str_local if c != "\r")
        str_local_length = len(str_local)
        str_git_length = len(str_git)
        max_length = max(str_local_length, str_git_length)
        local = None
        remote = None
        counter = 0
        counter_line = 0
        counter_char = 0
        for element in range(0, max_length - 1):
            if element < str_local_length:
                counter_char += 1
                local = str_local[element]
                if local == "\n":
                    counter_line += 1
                    counter_char = 0
                local = repr(local)
            if element < str_git_length:
                remote = repr(str_git[element])
            if local != remote:
                print(
                    f"Line: {counter_line}, character nr. {counter_char} local: {local} remote: {remote}"
                )
                counter += 1
                if counter > 40:
                    break
        print(str_local[0:400])
        print(str_git[0:400])